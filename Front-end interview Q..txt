1. Tell me about yourself.
I am a front-end developer with six months of experience, specializing in creating responsive and user-friendly web applications. 
I hold a BCA from MDSU University and a diploma in software development from Technoglobe Institute.
 I enjoy working with modern technologies like HTML, CSS, JavaScript, and React, and I'm eager to learn and grow in the field.

2. Difference between HTML and HTML5 (new features in HTML5).
HTML: The standard markup language for creating web pages.
HTML5: The latest version, introducing new features like:
Semantic elements (<header>, <footer>, <article>, etc.)
New form controls (<input type="date">, <input type="range">, etc.)
Multimedia support (native <audio> and <video> elements)
APIs for offline storage, geolocation, and web workers.

3. What is the Box Model?
The box model describes how elements on a web page are structured. It consists of:
Content: The actual content of the box (text, images, etc.).
Padding: The space between the content and the border.
Border: The area surrounding the padding.
Margin: The space outside the border that separates the element from others.
4. Difference between ID and Class and which has more priority?
ID: Unique identifier for a single element, used with # in CSS (e.g., #header). It has higher specificity.
Class: Can be applied to multiple elements, used with . in CSS (e.g., .container).
Priority: IDs have higher specificity than classes.

5. Difference between var, let, and const.
var: Function-scoped or globally scoped; can be redeclared and updated.
let: Block-scoped; cannot be redeclared but can be updated.
const: Block-scoped; cannot be redeclared or updated (must be initialized at declaration).

6. Media query in CSS and what it does?
Media queries are used to apply different styles based on device characteristics, like screen size or resolution.
They enable responsive design by allowing CSS rules to adapt to various devices.

7. Difference between margin and padding?
Margin: Space outside an element; affects the distance between elements.
Padding: Space inside an element; affects the distance between the content and the element's border.
8. What is a callback function and when is it used?
A callback function is a function passed as an argument to another function, which is executed after a certain event or when a task completes. It's commonly used in asynchronous programming, such as in event handlers or AJAX requests.

9. What are promises?
Promises are objects that represent the eventual completion (or failure) of an asynchronous operation and its resulting value. They allow for better handling of asynchronous code compared to callbacks by using .then() for success and .catch() for errors.

10. What is the event loop?
The event loop is a mechanism that allows JavaScript to perform non-blocking operations. It continuously checks the call stack and the task queue to execute code, handle events, and manage asynchronous operations.

11. CSS preprocessor?
A CSS preprocessor extends CSS with features like variables, nesting, and mixins. Examples include SASS, LESS, and Stylus, which make it easier to write and maintain CSS.

12. What is AJAX?
AJAX (Asynchronous JavaScript and XML) is a technique that allows web applications to send and retrieve data asynchronously without refreshing the page, resulting in a more dynamic and responsive user experience.

13. Tell some Git commands.
git init: Initialize a new Git repository.
git clone <repository>: Clone an existing repository.
git add <file>: Stage changes for commit.
git commit -m "message": Commit staged changes with a message.
git push: Push changes to a remote repository.
git pull: Fetch and merge changes from a remote repository.
14. Difference between null and undefined.
null: A value that explicitly represents "no value" or "no object." It's an assignment value.
undefined: A variable that has been declared but not assigned a value, or a function that does not return a value.
15. Tell some new features in ES6.
Arrow functions: Shorter syntax for functions.
Template literals: Multi-line strings and string interpolation.
Destructuring: Extracting values from arrays or objects.
Promises: For better handling of asynchronous operations.
Modules: Support for module imports and exports.
16. Difference between Arrow and normal functions.
Arrow functions: Do not have their own this context; they inherit this from the surrounding scope and have a shorter syntax.
Normal functions: Have their own this context, which can vary based on how they are called.
17. Do Arrow functions get hoisted? No.
Arrow functions do not get hoisted; they behave like variables and are not accessible before their declaration.

18. What is closure?
A closure is a function that retains access to its lexical scope, even when the function is executed outside that scope. It allows for data encapsulation and private variables.

19. What is the “this” keyword in JS?
The this keyword refers to the object that is executing the current function. Its value is determined by how a function is called (e.g., as a method, as a standalone function, etc.).

20. What is React JS and its use?
React JS is a JavaScript library for building user interfaces, primarily for single-page applications. It allows for the creation of reusable UI components and efficient updates to the user interface through a virtual DOM.

21. What is JSX?
JSX (JavaScript XML) is a syntax extension for JavaScript that allows you to write HTML-like code within JavaScript. It is transformed into JavaScript calls by tools like Babel.

22. Does our browser directly understand JSX?
No, browsers do not understand JSX directly. It needs to be transpiled into regular JavaScript using tools like Babel.

23. What is webpack?
Webpack is a module bundler for JavaScript applications. It takes modules with dependencies and generates static assets representing those modules, optimizing performance and managing resources like JavaScript, CSS, and images.

24. Lifecycle methods in React JS.
Lifecycle methods are hooks that allow you to run code at specific points in a component's life. Key lifecycle methods include:

componentDidMount(): Called after the component is mounted.
componentDidUpdate(): Called after updates are made.
componentWillUnmount(): Called just before the component is unmounted.
25. What is ref?
Refs provide a way to access DOM nodes or React elements directly. They are created using React.createRef() and can be attached to React elements via the ref attribute.

26. Controlled and uncontrolled components?
Controlled components: Form inputs whose values are controlled by React state. Changes are handled through callbacks.
Uncontrolled components: Form inputs that manage their own state internally. You can access their values via refs.
27. Higher-order functions.
Higher-order functions are functions that take other functions as arguments or return functions as their output. They are commonly used for callbacks and functional programming patterns.

28. Explain map, filter, and reduce.
map(): Creates a new array by applying a function to each element of an array.
filter(): Creates a new array containing elements that pass a test (function).
reduce(): Applies a function against an accumulator and each element in the array (from left to right) to reduce it to a single value.
29. Difference between state and props in React JS.
State: A mutable object that holds data specific to a component and can change over time.
Props: Immutable data passed to a component from its parent, used to configure the component.
30. What is router in React?
React Router is a library that allows for dynamic routing in React applications. It enables navigation between different components without refreshing the page and supports nested routes, route parameters, and programmatic navigation.

31. Server-side rendering (SSR).
Server-side rendering is the process of rendering web pages on the server instead of the client. It sends fully rendered pages to the browser, improving load times and SEO.

32. How to optimize the performance of a web application?
Minimize HTTP requests by bundling assets.
Use lazy loading for images and components.
Optimize images and serve them in modern formats.
Use caching strategies.
Minimize and compress CSS and JavaScript files.
Use a CDN for static assets.
33. Flexbox and what it does.
Flexbox (Flexible Box Layout) is a CSS layout model that provides an efficient way to arrange items in a one-dimensional layout (row or column). It allows for responsive design by controlling alignment, direction, and space distribution between items.

34. Difference between real and virtual DOM.
Real DOM: The actual representation of the UI elements in the browser. Updating it can be slow because it involves direct manipulation of the DOM.
Virtual DOM: A lightweight copy of the